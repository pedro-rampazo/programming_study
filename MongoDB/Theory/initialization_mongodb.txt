MongoDB Status:
$ sudo systemctl status mongod

Start MongoDB:
$ sudo systemctl start mongod

Stop MongoDB:
$ sudo systemctl stop mongod

Using MongoDB:
$ mongosh

------------------------------------------------
Databases > Collection (Tables in SQL)

#VIEWING MongoDB:#

{Show not empty databases}
mongodb> show databases

{Switch or create a new database}
mongodb> use <database_name>

{Delete a database - You must use query "use <database_name>" before}
mongodb> db.dropDatabase()

{Create a collection}
mongodb> db.createCollection('<collection_name>')

{Show collections}
mongodb> show collections

{Insert values}
mongodb> db.<collection_name>.insertOne({<key>: '<value>', <key>: '<value>'})
mongodb> deb.<collection_name>.insertMany({<key>: '<value>', <key>: '<value>'})

{Viewing values}
mongodb> db.<collection_name>.find({})

{Delete values}
mongodb> db.<collection_name>.deleteOne({<key>: '<value>'})
mongodb> db.<collection_name>.deleteMany({<key>: '<value>', <key>: '<value>'})

{Delete collections}
mongodb> db.<collection>.drop()

{Create collection witout _id field}
mongodb> db.createCollection("<collection_name>", {autoIndexId: false})

{Working with operators}
mongodb> db.<collection>.find({"<field>": {<operators>: <value>}})

{Working with AND operator}
db.<collection>.find({$and: [{"<field>": {$eq: "<value>"}}, {"<field>": {$eq: "<value>"}}]})

{Working with OR operator}
db.<collection>.find({$or: [{"<field>": {$eq: "<value>"}}, {"<field>": {$eq: "<value>"}}]})

OPERATORS:
$eq: Values EQUALS than <value>
$gt: Values GREATER than <value>
$gte: Values GREATER or EQUAL than <value>
$and: Logical Operator AND
$or: Logical Operator OR


